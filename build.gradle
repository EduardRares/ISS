plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'ro.iss2025'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'ro.iss2025.medicineorderingsystem'
    mainClass = 'ro.iss2025.medicineorderingsystem.Main'
}

javafx {
    version = '23.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('org.controlsfx:controlsfx:11.2.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.24.3'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.24.3'
    implementation 'org.jboss.logging:jboss-logging:3.5.0.Final' // Hibernate uses this
    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:3.0.1'
    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.1' // For JPA
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.48.0.0'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // Hibernate
    implementation 'org.hibernate.orm:hibernate-core:6.4.4.Final'
    implementation 'org.springframework:spring-context:6.1.14' // You have this, ensure it's needed for this project structure
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final' // For bean validation
    implementation 'org.glassfish:jakarta.el:4.0.2' // Dependency for hibernate-validator

    // JAXB Dependencies - Needed for Hibernate 6+
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0' // JAXB API
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.3'       // JAXB Runtime Implementation

    // Hibernate might also need a specific dialect if not using a common one, but SQLite is usually fine.
    // implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.4.Final' // You have this, it's good.
}

application {
    mainClass = 'ro.iss2025.medicineorderingsystem.Main'
}

java {
    modularity.inferModulePath = true
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}